{"ast":null,"code":"var _jsxFileName = \"/Users/lucaguglielmi/Desktop/Reddit-Clone/RedditClone/client/src/components/Atoms/Link.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport NextLink from 'next/link';\nimport { Box, Link as ChakraLink } from '@chakra-ui/core';\nexport const Link = (_ref) => {\n  let {\n    to,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"to\", \"children\"]);\n\n  console.log('test');\n  return __jsx(Box, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), __jsx(NextLink, {\n    href: to,\n    as: to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(ChakraLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, children)));\n};","map":{"version":3,"sources":["/Users/lucaguglielmi/Desktop/Reddit-Clone/RedditClone/client/src/components/Atoms/Link.tsx"],"names":["React","NextLink","Box","Link","ChakraLink","to","children","props","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,GAAT,EAAcC,IAAI,IAAIC,UAAtB,QAAwC,iBAAxC;AAMA,OAAO,MAAMD,IAAyB,GAAG,UAAgC;AAAA,MAA/B;AAAEE,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAA+B;AAAA,MAAZC,KAAY;;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SACE,MAAC,GAAD,eAASF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,EAAhB;AAAoB,IAAA,EAAE,EAAEA,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaC,QAAb,CADF,CADF,CADF;AAOD,CATM","sourcesContent":["import React from 'react';\nimport NextLink from 'next/link';\nimport { Box, Link as ChakraLink } from '@chakra-ui/core';\ninterface linkProps {\n  to: string;\n  mr?: string;\n}\n\nexport const Link: React.FC<linkProps> = ({ to, children, ...props }) => {\n  console.log('test');\n  return (\n    <Box {...props}>\n      <NextLink href={to} as={to}>\n        <ChakraLink>{children}</ChakraLink>\n      </NextLink>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}