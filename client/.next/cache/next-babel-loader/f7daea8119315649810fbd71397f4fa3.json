{"ast":null,"code":"var _jsxFileName = \"/Users/lucaguglielmi/Desktop/Reddit-Clone/RedditClone/client/src/components/Atoms/Wrapper.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { createBreakpoints } from '@chakra-ui/theme-tools';\nconst breakpoints = createBreakpoints({\n  sm: '320px',\n  md: '768px',\n  lg: '960px',\n  xl: '1200px'\n});\nexport const Wrapper = ({\n  children,\n  variant = 'regular'\n}) => {\n  let large = ['300px', '500px', '800px'];\n  let small = ['300px', '400px'];\n  return __jsx(Box, {\n    maxW: variant === 'regular' ? large : small,\n    mx: \"auto\",\n    w: \"100%\",\n    mb: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/lucaguglielmi/Desktop/Reddit-Clone/RedditClone/client/src/components/Atoms/Wrapper.tsx"],"names":["React","Box","createBreakpoints","breakpoints","sm","md","lg","xl","Wrapper","children","variant","large","small"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AAMA,MAAMC,WAAW,GAAGD,iBAAiB,CAAC;AACpCE,EAAAA,EAAE,EAAE,OADgC;AAEpCC,EAAAA,EAAE,EAAE,OAFgC;AAGpCC,EAAAA,EAAE,EAAE,OAHgC;AAIpCC,EAAAA,EAAE,EAAE;AAJgC,CAAD,CAArC;AAOA,OAAO,MAAMC,OAA+B,GAAG,CAAC;AAC9CC,EAAAA,QAD8C;AAE9CC,EAAAA,OAAO,GAAG;AAFoC,CAAD,KAGzC;AACJ,MAAIC,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAZ;AACA,MAAIC,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,CAAZ;AACA,SACE,MAAC,GAAD;AACE,IAAA,IAAI,EAAEF,OAAO,KAAK,SAAZ,GAAwBC,KAAxB,GAAgCC,KADxC;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,CAAC,EAAC,MAHJ;AAIE,IAAA,EAAE,EAAE,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,QANH,CADF;AAUD,CAhBM","sourcesContent":["import React from 'react';\nimport { Box } from '@chakra-ui/core';\nimport { createBreakpoints } from '@chakra-ui/theme-tools';\n\ninterface WrapperProps {\n  variant?: 'small' | 'regular';\n}\n\nconst breakpoints = createBreakpoints({\n  sm: '320px',\n  md: '768px',\n  lg: '960px',\n  xl: '1200px',\n});\n\nexport const Wrapper: React.FC<WrapperProps> = ({\n  children,\n  variant = 'regular',\n}) => {\n  let large = ['300px', '500px', '800px'];\n  let small = ['300px', '400px'];\n  return (\n    <Box\n      maxW={variant === 'regular' ? large : small}\n      mx='auto'\n      w='100%'\n      mb={12}\n    >\n      {children}\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}